{"version":3,"sources":["components/header/Header.js","components/dashboard/Dashboard.js","utils/httpResponses.js","components/error/Error.js","utils/fetchCalls.js","components/create/Create.js","components/app/App.js","index.js"],"names":["Header","to","Dashboard","httpResponses","Error","errorCode","clearSelected","response","find","code","className","message","description","onClick","fetchData","url","a","fetch","checkForError","ok","status","json","data","Create","addDog","useState","name","setName","age","setAge","breed","setBreed","error","setError","clearInputs","clearError","type","placeholder","value","onChange","event","target","required","preventDefault","newDog","id","Date","now","Name","Age","Breed","submitDog","App","fetchedData","setFetchedData","setErrorCode","myDogs","setMyDogs","fetchAndCleanData","Number","useEffect","exact","path","render","includes","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.78d112e7.chunk.js","sourcesContent":["import './Header.css';\nimport { NavLink } from 'react-router-dom'\n\nexport const Header = () => {\n  return (\n    <header>\n      <NavLink to ='/'>Dashboard</NavLink>\n      <NavLink to ='/calendar'>Calendar</NavLink>\n      <NavLink to ='/create'>Create Dog</NavLink>\n    </header>\n  );\n}","import './Dashboard.css';\n\nexport const Dashboard = () => {\n  return (\n    <h1>Test continuous deploy</h1>\n  );\n}","export const httpResponses = [\n  {\n    \"code\": 301,\n    \"message\": \"Moved Permanently\",\n    \"description\": `The URL of the requested resource has been changed\n      permanently. The new URL is given in the response.`,\n  },\n  {\n    \"code\": 401,\n    \"message\": \"Unauthorized\",\n    \"description\": `Although the HTTP standard specifies \"unauthorized\",\n      semantically this response means \"unauthenticated\". That is, the client\n      must authenticate itself to get the requested response.`,\n  },\n  {\n    \"code\": 403,\n    \"message\": \"Forbidden\",\n    \"description\": `The client does not have access rights to the content;\n      that is, it is unauthorized, so the server is refusing to give the\n      requested resource. Unlike 401, the client's identity is known to the\n      server.`,\n  },\n  {\n    \"code\": 404,\n    \"message\": \"Not Found\",\n    \"description\": `The server can not find the requested resource. In the\n      browser, this means the URL is not recognized. In an API, this can also\n      mean that the endpoint is valid but the resource itself does not exist.\n      Servers may also send this response instead of 403 to hide the existence\n      of a resource from an unauthorized client. This response code is probably \n      the most famous one due to its frequent occurrence on the web.`,\n  },\n  {\n    \"code\": 408,\n    \"message\": \"Request Timeout\",\n    \"description\": `This response is sent on an idle connection by some \n      servers, even without any previous request by the client. It means that \n      the server would like to shut down this unused connection. This response \n      is used much more since some browsers, like Chrome, Firefox 27+, or IE9, \n      use HTTP pre-connection mechanisms to speed up surfing. Also note that \n      some servers merely shut down the connection without sending this \n      message.`,\n  },\n  {\n    \"code\": 429,\n    \"message\": \"Too Many Requests\",\n    \"description\": `The user has sent too many requests in a given amount of \n      time (\"rate limiting\").`,\n  },\n  {\n    \"code\": 500,\n    \"message\": \"Internal Server Error\",\n    \"description\": `The server has encountered a situation it doesn't know how \n      to handle.`,\n  },\n  {\n    \"code\": 502,\n    \"message\": \"Bad Gateway\",\n    \"description\": `This error response means that the server, while working as \n      a gateway to get a response needed to handle the request, got an invalid \n      response.`,\n  },\n  {\n    \"code\": 503,\n    \"message\": \"Service Unavailable\",\n    \"description\": `The server is not ready to handle the request. Common \n      causes are a server that is down for maintenance or that is overloaded. \n      Note that together with this response, a user-friendly page explaining \n      the problem should be sent. This response should be used for temporary \n      conditions and the Retry-After: HTTP header should, if possible, contain \n      the estimated time before the recovery of the service. The webmaster must \n      also take care about the caching-related headers that are sent along with \n      this response, as these temporary condition responses should usually not \n      be cached.`,\n  },\n  {\n    \"code\": 504,\n    \"message\": \"Gateway Timeout\",\n    \"description\": `This error response is given when the server is acting as a \n      gateway and cannot get a response in time.`,\n  }\n]","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Error.css';\nimport { httpResponses } from '../../utils/httpResponses'\n\nexport const Error = ({ errorCode, clearSelected }) => {\n  let response = httpResponses.find(response =>\n    response.code === errorCode\n  )\n  return (\n    <article className='error-container'>\n      <div className='error-div'>\n        <h2 className='error-h2'>Error {response.code}</h2>\n        <h3>{response.message}</h3>\n        <p>{response.description}</p>\n        <Link to='/'>\n          <button className='details-back' onClick={clearSelected}>Back</button>\n        </Link>\n      </div>\n    </article>\n  )\n}\n\nError.propTypes = {\n  errorCode: PropTypes.number.isRequired,\n  clearSelected: PropTypes.func.isRequired\n};","export const fetchData = async (url) => {\n  let response = await fetch(url);\n  return checkForError(response);\n};\n\nconst checkForError = async (response) => {\n  if (!response.ok) {\n    throw new Error(response.status);\n  } else {\n    let data = await response.json()\n    return data\n  }\n}","import './Create.css';\nimport React, { useState } from 'react';\n\nconst Create = ({addDog}) => {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [breed, setBreed] = useState('');\n  //Will eventually use api that backend creates to turn this into a drop down \n  const [error, setError] = useState('')\n\n  const submitDog = event => {\n    event.preventDefault();\n    const newDog = {\n      id: Date.now(),\n      Name: name,\n      Age: age,\n      Breed: breed\n    }\n    if(name && age && breed) {\n      addDog(newDog);\n      clearError()\n      clearInputs()\n    } else {\n      setError('Sorry, you must input all fields before creating a dog!')\n    } \n  }\n\n  const clearInputs = () => {\n    setName('');\n    setAge('');\n    setBreed('');\n  }\n\n  const clearError = () => {\n    setError('')\n  }\n\n  return(\n    <form>\n      <h1 className='train-dog-title'>Train your dog!</h1>\n      <input\n        type='text'\n        placeholder='Name'\n        name = 'name'\n        value= {name}\n        onChange={(event)=> setName(event.target.value)}\n        required\n      />\n       <input\n        type='number'\n        placeholder='Age'\n        name = 'age'\n        value= {age}\n        onChange={(event)=> setAge(event.target.value)}\n        required\n      />\n      <input\n        type='text'\n        placeholder='Breed'\n        name = 'breed'\n        value= {breed}\n        onChange={(event)=> setBreed(event.target.value)}\n        required\n      />\n      <button onClick={event => submitDog(event)}>Create</button>\n      <p>{error}</p>\n    </form>\n    \n  )\n}\n\nexport default Create","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Header } from '../header/Header';\nimport { Dashboard } from '../dashboard/Dashboard'\nimport { Error } from '../error/Error'\nimport { fetchData } from '../../utils/fetchCalls';\nimport Create from '../create/Create'; \n\nexport const App = () => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [errorCode, setErrorCode] = useState(0);\n  const [myDogs, setMyDogs] = useState([]);\n  \n  const addDog = (newDog) => {\n    if (!myDogs.includes(newDog)) {\n      setMyDogs([newDog, ...myDogs]);\n    }\n  }\n\n  const fetchAndCleanData = async () => {\n    try {\n      let fetchedData = await fetchData('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n      setFetchedData(fetchedData)\n    } catch (error) {\n      setErrorCode(Number(error.message))\n    }\n  }\n\n  useEffect(() => {\n    fetchAndCleanData()\n  }, [])\n\n  const clearSelected = () => {\n    setErrorCode(0)\n  }\n\n  return (\n    <>\n      <Header />\n      <main>\n        {errorCode !== 0 &&\n          <Error errorCode={errorCode} clearSelected={clearSelected} />\n        }\n        {!errorCode && (\n          <Switch>\n            <Route exact path='/' render={() =>\n              <Dashboard fetchedData={fetchedData} /> \n            }/>\n\n            <Route exact path='/404' render={() =>\n              <Error errorCode={404} clearSelected={clearSelected} />\n            }/>\n\n            <Route path='/create'>\n              <Create addDog={addDog}/>\n            </Route>\n            \n            <Redirect to='/404' />\n          </Switch>\n        )}\n      </main>\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/app/App';\nimport { HashRouter } from 'react-router-dom';\n\nconst router = <HashRouter> <App /> </HashRouter>;\n\nReactDOM.render(router, document.getElementById('root'));"],"sourceRoot":""}